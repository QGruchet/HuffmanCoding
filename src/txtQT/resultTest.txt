
	> TESTS <
[  [0;32mOK[0m  ] Create a default node.
[  [0;32mOK[0m  ] Create a node with a copy.
[  [0;32mOK[0m  ] Create a node with a value.
[  [0;32mOK[0m  ] Assign a node in a other .
[  [0;32mOK[0m  ] Say if two nodes are equals.
[  [0;32mOK[0m  ] Count the tree's depht.
[  [0;32mOK[0m  ] Count the number of nodes.
[  [0;32mOK[0m  ] Create a default tree.
[  [0;32mOK[0m  ] Create a tree with the value of the root.
[  [0;32mOK[0m  ] Assign a trees in a other.
[  [0;32mOK[0m  ] Say if two tree are equals.
[  [0;32mOK[0m  ] Add a new node in the tree.
[ [0;31mFAIL[0m ] Delete a node in the tree.
[  [0;32mOK[0m  ] Say if a value is in the tree.
[  [0;32mOK[0m  ] Get node at index in the tree.
[  [0;32mOK[0m  ] Join the tree with a other.
[  [0;32mOK[0m  ] Split the tree in two.
> TESTS RESULT : [ [0;31m16[0m/[0;32m17[0m ] tests passed ! <
